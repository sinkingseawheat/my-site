
/* ヘッダー */
.l_h {
  /* Todo:文字サイズが大きいときに高さの最大値を設けたいけど、色々おかしくなる */
  max-height: 20vh;
  overflow: auto;
  display: grid;
  grid-template-rows: 1fr;
  padding: var(--pd-outermost-top) var(--pd-outermost-both-sides);
}
@media (prefers-reduced-motion: no-preference){
  .l_h {
    transition:
      grid-tempalte-rows var(--animation-duration),
      padding-top var(--animation-duration),
      padding-bottom var(--animation-duration);
  }
}
.l_h > .l_h__inner {
  display: grid;
  grid-template-columns: auto auto;
  justify-content: space-between;
  align-items: center;
  column-gap: 1rem;
  overflow: hidden; /* for grid-template-rows transition */
}
.l_h[aria-hidden='false'] > .l_h_i {
  padding: 2px; /* for outline */
}
.c_headerLogo {
  display: grid;
  grid-template-columns: auto auto;
  align-items: center;
  column-gap: 8px;
  padding: 4px;
  border-radius: 4px;
  background-color: rgb(var(--color-fixed-white));
  position: relative;
}
a.c_headerLogo {
  &:hover, &:focus {
    outline: none; /* 独自でスタイルを入れるため */
    &::after {
      --border-width: 2px;
      --offset: 1px;
      content: '';
      position: absolute;
      pointer-events: none;
      top: var(--offset);
      left: var(--offset);
      width: calc(100% - var(--offset) - 2 * var(--border-width));
      height: calc(100% - var(--offset) - 2 * var(--border-width));
      border: var(--border-width) solid rgb(var(--color-fixed-black));
      border-radius: 3px;
    }
  }
}
.c_headerTitle {
  display: flex;
  justify-content: center;
  max-height: calc(1em * var(--value-line-height-default) * 2);
  overflow-y: auto;
}
.l_h[aria-hidden='true'] {
  /* on shrink animation ends*/
  grid-template-rows: 0fr;
  padding-top: 0;
  padding-bottom: 0;
  & :is(a[href],button,[tabindex]:not([tabindex="-1"]),[role="button"],input,textarea){
    visibility: hidden;
  }
}